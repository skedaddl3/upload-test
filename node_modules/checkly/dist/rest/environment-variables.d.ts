import type { AxiosInstance } from 'axios';
export interface EnvironmentVariable {
    key: string;
    value: string;
    locked: boolean;
}
declare class EnvironmentVariables {
    api: AxiosInstance;
    constructor(api: AxiosInstance);
    getAll(): Promise<import("axios").AxiosResponse<EnvironmentVariable[], any>>;
    delete(environmentVariableKey: string): Promise<import("axios").AxiosResponse<any, any>>;
    add(environmentVariableKey: string, environmentVariableValue: string, locked: boolean): Promise<import("axios").AxiosResponse<any, any>>;
    get(environmentVariableKey: string): Promise<import("axios").AxiosResponse<EnvironmentVariable, any>>;
    update(environmentVariableKey: string, environmentVariableValue: string, locked?: boolean): Promise<import("axios").AxiosResponse<any, any>>;
}
export default EnvironmentVariables;
