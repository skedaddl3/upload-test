"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RetryStrategyBuilder = void 0;
class RetryStrategyBuilder {
    /**
     * Each retry is run with the same backoff between attempts.
     */
    static fixedStrategy(options) {
        return RetryStrategyBuilder.retryStrategy('FIXED', options);
    }
    /**
     * The delay between retries increases linearly
     *
     * The delay between retries is calculated using `baseBackoffSeconds * attempt`.
     * For example, retries will be run with a backoff of 10s, 20s, 30s, and so on.
     */
    static linearStrategy(options) {
        return RetryStrategyBuilder.retryStrategy('LINEAR', options);
    }
    /**
     * The delay between retries increases exponentially
     *
     * The delay between retries is calculated using `baseBackoffSeconds ^ attempt`.
     * For example, retries will be run with a backoff of 10s, 100s, 1000s, and so on.
     */
    static exponentialStrategy(options) {
        return RetryStrategyBuilder.retryStrategy('EXPONENTIAL', options);
    }
    static retryStrategy(type, options) {
        var _a, _b, _c, _d;
        return {
            type,
            baseBackoffSeconds: (_a = options === null || options === void 0 ? void 0 : options.baseBackoffSeconds) !== null && _a !== void 0 ? _a : RetryStrategyBuilder.DEFAULT_BASE_BACKOFF_SECONDS,
            maxRetries: (_b = options === null || options === void 0 ? void 0 : options.maxRetries) !== null && _b !== void 0 ? _b : RetryStrategyBuilder.DEFAULT_MAX_RETRIES,
            maxDurationSeconds: (_c = options === null || options === void 0 ? void 0 : options.maxDurationSeconds) !== null && _c !== void 0 ? _c : RetryStrategyBuilder.DEFAULT_MAX_DURATION_SECONDS,
            sameRegion: (_d = options === null || options === void 0 ? void 0 : options.sameRegion) !== null && _d !== void 0 ? _d : RetryStrategyBuilder.DEFAULT_SAME_REGION,
        };
    }
}
exports.RetryStrategyBuilder = RetryStrategyBuilder;
RetryStrategyBuilder.DEFAULT_BASE_BACKOFF_SECONDS = 60;
RetryStrategyBuilder.DEFAULT_MAX_RETRIES = 2;
RetryStrategyBuilder.DEFAULT_MAX_DURATION_SECONDS = 60 * 10;
RetryStrategyBuilder.DEFAULT_SAME_REGION = true;
//# sourceMappingURL=retry-strategy.js.map