"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const prompts_1 = __importDefault(require("prompts"));
const core_1 = require("@oclif/core");
const config_1 = __importDefault(require("../services/config"));
const baseCommand_1 = require("./baseCommand");
const common_messages_1 = __importDefault(require("../messages/common-messages"));
class Logout extends baseCommand_1.BaseCommand {
    async run() {
        const { flags } = await this.parse(Logout);
        const { force } = flags;
        const accountName = config_1.default.data.get('accountName');
        if (!force) {
            const message = `You are about to clear your local session ${accountName
                ? ' of "' + accountName + '"'
                : ''}, do you want to continue?`;
            const { confirm } = await (0, prompts_1.default)({
                name: 'confirm',
                type: 'confirm',
                message,
            });
            if (!confirm) {
                this.exit(0);
            }
        }
        config_1.default.clear();
        this.log('See you soon! ðŸ‘‹');
    }
}
exports.default = Logout;
Logout.hidden = false;
Logout.description = 'Log out and clear any local credentials.';
Logout.flags = {
    force: core_1.Flags.boolean({
        char: 'f',
        description: common_messages_1.default.forceMode,
        default: false,
    }),
};
//# sourceMappingURL=logout.js.map