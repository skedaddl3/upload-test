"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Collector = void 0;
const errors_1 = require("./errors");
class Collector {
    constructor(entrypoint, entrypointContent) {
        this.missingFiles = [];
        this.parseErrors = [];
        this.unsupportedNpmDependencies = [];
        this.dependencies = new Map();
        this.entrypoint = entrypoint;
        this.entrypointContent = entrypointContent;
    }
    hasDependency(path) {
        return this.dependencies.has(path);
    }
    addDependency(path, content) {
        this.dependencies.set(path, content);
    }
    addUnsupportedNpmDependencies(file, unsupportedDependencies) {
        this.unsupportedNpmDependencies.push({ file, unsupportedDependencies });
    }
    addParsingError(file, message) {
        this.parseErrors.push({ file, error: message });
    }
    addMissingFile(filePath) {
        this.missingFiles.push(filePath);
    }
    validate() {
        if (this.missingFiles.length || this.parseErrors.length || this.unsupportedNpmDependencies.length) {
            throw new errors_1.DependencyParseError(this.entrypoint, this.missingFiles, this.unsupportedNpmDependencies, this.parseErrors);
        }
    }
    getItems() {
        return {
            entrypoint: {
                filePath: this.entrypoint,
                content: this.entrypointContent,
            },
            dependencies: Array.from(this.dependencies.entries(), ([key, value]) => ({
                filePath: key,
                content: value,
            })),
        };
    }
}
exports.Collector = Collector;
//# sourceMappingURL=collector.js.map