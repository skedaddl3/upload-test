import type { CreateAxiosDefaults } from 'axios';
export interface GitInformation {
    commitId: string;
    repoUrl?: string | null;
    branchName?: string | null;
    commitOwner?: string | null;
    commitMessage?: string | null;
}
export interface CiInformation {
    environment: string | null;
}
export declare function findFilesRecursively(directory: string, ignoredPaths?: Array<string>): string[];
export declare function loadJsFile(filepath: string): Promise<any>;
export declare function loadTsFile(filepath: string): Promise<any>;
/**
 * @param relPath the path to be converted
 * @param separator this is for testing purposes only so we can reliably replace the separator on Linux / Darwin
 */
export declare function pathToPosix(relPath: string, separator?: string): string;
export declare function splitConfigFilePath(configFile?: string): {
    configDirectory: string;
    configFilenames?: string[];
};
export declare function isFileSync(path: string): boolean;
/**
 * @param repoUrl default repoURL the user can set in their project config.
 */
export declare function getGitInformation(repoUrl?: string): GitInformation | null;
export declare function getCiInformation(): CiInformation;
export declare function escapeValue(value: string | undefined): string;
export declare function getEnvs(envFile: string | undefined, envArgs: Array<string>): Promise<import("dotenv").DotenvParseOutput>;
export declare function assignProxy(baseURL: string, axiosConfig: CreateAxiosDefaults): CreateAxiosDefaults<any>;
