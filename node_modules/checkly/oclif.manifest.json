{
  "version": "4.4.0",
  "commands": {
    "authCommand": {
      "id": "authCommand",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": true,
      "aliases": [],
      "flags": {},
      "args": {}
    },
    "baseCommand": {
      "id": "baseCommand",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": true,
      "aliases": [],
      "flags": {},
      "args": {},
      "coreCommand": false
    },
    "deploy": {
      "id": "deploy",
      "description": "Deploy your project to your Checkly account.",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": false,
      "aliases": [],
      "flags": {
        "preview": {
          "name": "preview",
          "type": "boolean",
          "char": "p",
          "description": "Show a preview of the changes made by the deploy command.",
          "allowNo": false
        },
        "output": {
          "name": "output",
          "type": "boolean",
          "char": "o",
          "description": "Shows the changes made after the deploy command.",
          "allowNo": false
        },
        "schedule-on-deploy": {
          "name": "schedule-on-deploy",
          "type": "boolean",
          "description": "Enables automatic check scheduling after a deploy.",
          "allowNo": true
        },
        "force": {
          "name": "force",
          "type": "boolean",
          "char": "f",
          "description": "Force mode. Skips the confirmation dialog.",
          "allowNo": false
        },
        "config": {
          "name": "config",
          "type": "option",
          "char": "c",
          "description": "The Checkly CLI configuration file. If not passed, uses the checkly.config.ts|js file in the current directory.",
          "multiple": false
        }
      },
      "args": {},
      "coreCommand": true
    },
    "destroy": {
      "id": "destroy",
      "description": "Destroy your project with all its related resources.",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": false,
      "aliases": [],
      "flags": {
        "force": {
          "name": "force",
          "type": "boolean",
          "char": "f",
          "description": "Force mode. Skips the confirmation dialog.",
          "allowNo": false
        },
        "config": {
          "name": "config",
          "type": "option",
          "char": "c",
          "description": "The Checkly CLI configuration file. If not passed, uses the checkly.config.ts|js file in the current directory.",
          "multiple": false
        }
      },
      "args": {}
    },
    "help": {
      "id": "help",
      "description": "Display help for <%= config.bin %>.",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": false,
      "aliases": [],
      "flags": {},
      "args": {}
    },
    "login": {
      "id": "login",
      "description": "Login to your Checkly account or create a new one.",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": false,
      "aliases": [],
      "flags": {},
      "args": {}
    },
    "logout": {
      "id": "logout",
      "description": "Log out and clear any local credentials.",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": false,
      "aliases": [],
      "flags": {
        "force": {
          "name": "force",
          "type": "boolean",
          "char": "f",
          "description": "Force mode. Skips the confirmation dialog.",
          "allowNo": false
        }
      },
      "args": {}
    },
    "runtimes": {
      "id": "runtimes",
      "description": "List all supported runtimes and dependencies.",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": false,
      "aliases": [],
      "flags": {},
      "args": {}
    },
    "switch": {
      "id": "switch",
      "description": "Switch user account.",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": false,
      "aliases": [],
      "flags": {
        "account-id": {
          "name": "account-id",
          "type": "option",
          "char": "a",
          "description": "The id of the account you want to switch to.",
          "multiple": false
        }
      },
      "args": {}
    },
    "test": {
      "id": "test",
      "description": "Test your checks on Checkly.",
      "strict": false,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": false,
      "aliases": [],
      "flags": {
        "location": {
          "name": "location",
          "type": "option",
          "char": "l",
          "description": "The location to run the checks at.",
          "multiple": false
        },
        "private-location": {
          "name": "private-location",
          "type": "option",
          "description": "The private location to run checks at.",
          "multiple": false,
          "exclusive": [
            "location"
          ]
        },
        "grep": {
          "name": "grep",
          "type": "option",
          "char": "g",
          "description": "Only run checks where the check name matches a regular expression.",
          "multiple": false,
          "default": ".*"
        },
        "tags": {
          "name": "tags",
          "type": "option",
          "char": "t",
          "description": "Filter the checks to be run using a comma separated list of tags. Checks will only be run if they contain all of the specified tags. Multiple --tags flags can be passed, in which case checks will be run if they match any of the --tags filters. F.ex. `--tags production,webapp --tags production,backend` will run checks with tags (production AND webapp) OR (production AND backend).",
          "required": false,
          "multiple": true
        },
        "env": {
          "name": "env",
          "type": "option",
          "char": "e",
          "description": "Env vars to be passed to the test run.",
          "multiple": true,
          "exclusive": [
            "env-file"
          ],
          "default": []
        },
        "env-file": {
          "name": "env-file",
          "type": "option",
          "description": "dotenv file path to be passed. For example --env-file=\"./.env\"",
          "multiple": false,
          "exclusive": [
            "env"
          ]
        },
        "list": {
          "name": "list",
          "type": "boolean",
          "description": "list all checks but don't run them.",
          "allowNo": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "A timeout (in seconds) to wait for checks to complete.",
          "multiple": false,
          "default": 300
        },
        "verbose": {
          "name": "verbose",
          "type": "boolean",
          "char": "v",
          "description": "Always show the full logs of the checks.",
          "allowNo": true
        },
        "reporter": {
          "name": "reporter",
          "type": "option",
          "char": "r",
          "description": "A list of custom reporters for the test output.",
          "multiple": false,
          "options": [
            "list",
            "dot",
            "ci",
            "github"
          ]
        },
        "config": {
          "name": "config",
          "type": "option",
          "char": "c",
          "description": "The Checkly CLI configuration file. If not passed, uses the checkly.config.ts|js file in the current directory.",
          "multiple": false
        },
        "record": {
          "name": "record",
          "type": "boolean",
          "description": "Record test results in Checkly as a test session with full logs, traces and videos.",
          "allowNo": false
        },
        "test-session-name": {
          "name": "test-session-name",
          "type": "option",
          "char": "n",
          "description": "A name to use when storing results in Checkly with --record.",
          "multiple": false
        },
        "update-snapshots": {
          "name": "update-snapshots",
          "type": "boolean",
          "char": "u",
          "description": "Update any snapshots using the actual result of this test run.",
          "allowNo": false
        }
      },
      "args": {
        "fileArgs": {
          "name": "fileArgs",
          "description": "Only run checks where the file name matches a regular expression",
          "required": false,
          "default": ".*"
        }
      },
      "coreCommand": true
    },
    "trigger": {
      "id": "trigger",
      "description": "Trigger your checks on Checkly.",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": false,
      "aliases": [],
      "flags": {
        "location": {
          "name": "location",
          "type": "option",
          "char": "l",
          "description": "The location to run the checks at.",
          "multiple": false
        },
        "private-location": {
          "name": "private-location",
          "type": "option",
          "description": "The private location to run checks at.",
          "multiple": false,
          "exclusive": [
            "location"
          ]
        },
        "tags": {
          "name": "tags",
          "type": "option",
          "char": "t",
          "description": "Filter the checks to be run using a comma separated list of tags. Checks will only be run if they contain all of the specified tags. Multiple --tags flags can be passed, in which case checks will be run if they match any of the --tags filters. F.ex. `--tags production,webapp --tags production,backend` will run checks with tags (production AND webapp) OR (production AND backend).",
          "required": false,
          "multiple": true
        },
        "config": {
          "name": "config",
          "type": "option",
          "char": "c",
          "description": "The Checkly CLI config filename.",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "A timeout (in seconds) to wait for checks to complete.",
          "multiple": false,
          "default": 240
        },
        "verbose": {
          "name": "verbose",
          "type": "boolean",
          "char": "v",
          "description": "Always show the full logs of the checks.",
          "allowNo": true
        },
        "reporter": {
          "name": "reporter",
          "type": "option",
          "char": "r",
          "description": "A list of custom reporters for the test output.",
          "multiple": false,
          "options": [
            "list",
            "dot",
            "ci",
            "github"
          ]
        },
        "env": {
          "name": "env",
          "type": "option",
          "char": "e",
          "description": "Env vars to be passed to the check run.",
          "multiple": true,
          "exclusive": [
            "env-file"
          ],
          "default": []
        },
        "env-file": {
          "name": "env-file",
          "type": "option",
          "description": "dotenv file path to be passed. For example --env-file=\"./.env\"",
          "multiple": false,
          "exclusive": [
            "env"
          ]
        },
        "record": {
          "name": "record",
          "type": "boolean",
          "description": "Record check results in Checkly as a test session with full logs, traces and videos.",
          "allowNo": false
        },
        "test-session-name": {
          "name": "test-session-name",
          "type": "option",
          "char": "n",
          "description": "A name to use when storing results in Checkly with --record.",
          "multiple": false
        }
      },
      "args": {},
      "coreCommand": true
    },
    "whoami": {
      "id": "whoami",
      "description": "See your currently logged in account and user.",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": false,
      "aliases": [],
      "flags": {},
      "args": {}
    },
    "env:add": {
      "id": "env:add",
      "description": "Add environment variable via \"checkly env add <key> <value>\".",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": false,
      "aliases": [],
      "flags": {
        "locked": {
          "name": "locked",
          "type": "boolean",
          "char": "l",
          "description": "Indicate that the environment variable will be locked.",
          "allowNo": false
        }
      },
      "args": {
        "key": {
          "name": "key",
          "description": "Environment variable key.",
          "required": true
        },
        "value": {
          "name": "value",
          "description": "Environment variable value.",
          "required": false
        }
      }
    },
    "env:ls": {
      "id": "env:ls",
      "description": "List all Checkly environment variables via \"checkly env ls\".",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": false,
      "aliases": [],
      "flags": {},
      "args": {}
    },
    "env:pull": {
      "id": "env:pull",
      "description": "Pull Checkly environment variables via \"checkly env pull <filename>\".",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": false,
      "aliases": [],
      "flags": {
        "force": {
          "name": "force",
          "type": "boolean",
          "char": "f",
          "description": "Force to overwrite existing file.",
          "allowNo": false
        }
      },
      "args": {
        "filename": {
          "name": "filename",
          "description": "Filename of the generated file.",
          "required": false,
          "default": ".env"
        }
      }
    },
    "env:rm": {
      "id": "env:rm",
      "description": "Remove environment variable via \"checkly env rm <key>\".",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": false,
      "aliases": [],
      "flags": {
        "force": {
          "name": "force",
          "type": "boolean",
          "char": "f",
          "description": "Force to skip the confirmation prompt.",
          "allowNo": false
        }
      },
      "args": {
        "key": {
          "name": "key",
          "description": "Environment variable key to remove.",
          "required": true
        }
      }
    },
    "env:update": {
      "id": "env:update",
      "description": "Update environment variable via \"checkly env update <key> <value>\".",
      "strict": true,
      "pluginName": "checkly",
      "pluginAlias": "checkly",
      "pluginType": "core",
      "hidden": false,
      "aliases": [],
      "flags": {
        "locked": {
          "name": "locked",
          "type": "boolean",
          "char": "l",
          "description": "Indicate if environment variable is locked.",
          "allowNo": false
        }
      },
      "args": {
        "key": {
          "name": "key",
          "description": "Environment variable key.",
          "required": true
        },
        "value": {
          "name": "value",
          "description": "Environment variable value.",
          "required": false
        }
      }
    }
  }
}